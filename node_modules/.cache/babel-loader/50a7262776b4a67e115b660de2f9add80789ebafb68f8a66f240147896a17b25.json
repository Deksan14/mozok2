{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Desktop\\\\MozokProject\\\\mozokapp\\\\src\\\\components\\\\pages\\\\table.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../pages/table.css\";\n\n//import AgePredict from \"./age\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = () => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [select, setSelected] = useState();\n  let navigate = useNavigate();\n  useEffect(() => {\n    fetch(\"https://www.breakingbadapi.com/api/quotes\").then(data => data.json()).then(data => setTableData(data));\n  }, []);\n  const columns = [{\n    field: \"quote_id\",\n    headerName: \"ID\"\n  }, {\n    field: \"quote\",\n    headerName: \"Quote\",\n    width: 1000\n  }, {\n    field: \"author\",\n    headerName: \"Author\",\n    width: 200\n  }, {\n    field: \"age\",\n    headerName: \"Predicted Age\",\n    width: 200\n  }];\n  console.log(tableData);\n  //onRowClick={handleRowSelection}\n  function handleRowSelection(params) {\n    setSelected(params.row);\n  }\n  useEffect(() => {\n    if (select) {\n      fetch(`https://api.agify.io/?name=${select.author}`).then(data => {\n        const newData = {\n          ...select,\n          age: data.json()\n        };\n        const row = tableData.findIndex(obj => (obj === null || obj === void 0 ? void 0 : obj.quote_id) === select.quote_id);\n        if (newData) {\n          tableData.splice(row, 1, newData);\n        }\n      });\n    }\n  }, []);\n  console.log(select);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    style: {\n      height: \"650px\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => {\n          navigate(\"/random\");\n        },\n        children: \"Get Random Quotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      onRowClick: handleRowSelection,\n      rows: tableData,\n      columns: columns,\n      getRowId: row => row.quote_id,\n      pageSize: 10,\n      loading: !tableData.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"70kmAO+L2QPNksBuwAAcXi6RaqY=\", false, function () {\n  return [useNavigate];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","DataGrid","useNavigate","DataTable","tableData","setTableData","select","setSelected","navigate","fetch","then","data","json","columns","field","headerName","width","console","log","handleRowSelection","params","row","author","newData","age","findIndex","obj","quote_id","splice","height","length"],"sources":["C:/Users/angel/Desktop/MozokProject/mozokapp/src/components/pages/table.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { DataGrid, GridRowParams } from \"@material-ui/data-grid\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../pages/table.css\";\r\n\r\n//import AgePredict from \"./age\";\r\ninterface Quote {\r\n  quote_id: number;\r\n  quote: string;\r\n  author: string;\r\n  series: string;\r\n}\r\n\r\nconst DataTable = () => {\r\n  const [tableData, setTableData] = useState<Quote[]>([]);\r\n  const [select, setSelected] = useState<Quote>();\r\n\r\n  let navigate = useNavigate();\r\n  useEffect(() => {\r\n    fetch(\"https://www.breakingbadapi.com/api/quotes\")\r\n      .then((data) => data.json())\r\n      .then((data) => setTableData(data));\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"quote_id\", headerName: \"ID\" },\r\n    { field: \"quote\", headerName: \"Quote\", width: 1000 },\r\n    { field: \"author\", headerName: \"Author\", width: 200 },\r\n    { field: \"age\", headerName: \"Predicted Age\", width: 200 },\r\n  ];\r\n  console.log(tableData);\r\n  //onRowClick={handleRowSelection}\r\n  function handleRowSelection(params: any) {\r\n    setSelected(params.row);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (select) {\r\n      fetch(`https://api.agify.io/?name=${select.author}`).then((data) => {\r\n        const newData = { ...select, age: data.json() };\r\n        const row = tableData.findIndex(\r\n          (obj: Quote) => obj?.quote_id === select.quote_id\r\n        );\r\n\r\n        if (newData) {\r\n          tableData.splice(row, 1, newData);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n  console.log(select);\r\n  return (\r\n    <div className=\"table\" style={{ height: \"650px\", width: \"100%\" }}>\r\n      <nav>\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => {\r\n            navigate(\"/random\");\r\n          }}\r\n        >\r\n          Get Random Quotes\r\n        </button>\r\n      </nav>\r\n\r\n      <DataGrid\r\n        onRowClick={handleRowSelection}\r\n        rows={tableData}\r\n        columns={columns}\r\n        getRowId={(row) => row.quote_id}\r\n        pageSize={10}\r\n        loading={!tableData.length}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAuB,wBAAwB;AAChE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,oBAAoB;;AAE3B;AAAA;AAQA,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAU,EAAE,CAAC;EACvD,MAAM,CAACO,MAAM,EAAEC,WAAW,CAAC,GAAGR,QAAQ,EAAS;EAE/C,IAAIS,QAAQ,GAAGN,WAAW,EAAE;EAC5BF,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAC3BF,IAAI,CAAEC,IAAI,IAAKN,YAAY,CAACM,IAAI,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE;EAAK,CAAC,EACvC;IAAED,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAK,CAAC,EACpD;IAAEF,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAI,CAAC,EACrD;IAAEF,KAAK,EAAE,KAAK;IAAEC,UAAU,EAAE,eAAe;IAAEC,KAAK,EAAE;EAAI,CAAC,CAC1D;EACDC,OAAO,CAACC,GAAG,CAACd,SAAS,CAAC;EACtB;EACA,SAASe,kBAAkB,CAACC,MAAW,EAAE;IACvCb,WAAW,CAACa,MAAM,CAACC,GAAG,CAAC;EACzB;EAEArB,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,EAAE;MACVG,KAAK,CAAE,8BAA6BH,MAAM,CAACgB,MAAO,EAAC,CAAC,CAACZ,IAAI,CAAEC,IAAI,IAAK;QAClE,MAAMY,OAAO,GAAG;UAAE,GAAGjB,MAAM;UAAEkB,GAAG,EAAEb,IAAI,CAACC,IAAI;QAAG,CAAC;QAC/C,MAAMS,GAAG,GAAGjB,SAAS,CAACqB,SAAS,CAC5BC,GAAU,IAAK,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEC,QAAQ,MAAKrB,MAAM,CAACqB,QAAQ,CAClD;QAED,IAAIJ,OAAO,EAAE;UACXnB,SAAS,CAACwB,MAAM,CAACP,GAAG,EAAE,CAAC,EAAEE,OAAO,CAAC;QACnC;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EACNN,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;EACnB,oBACE;IAAK,SAAS,EAAC,OAAO;IAAC,KAAK,EAAE;MAAEuB,MAAM,EAAE,OAAO;MAAEb,KAAK,EAAE;IAAO,CAAE;IAAA,wBAC/D;MAAA,uBACE;QACE,SAAS,EAAC,QAAQ;QAClB,OAAO,EAAE,MAAM;UACbR,QAAQ,CAAC,SAAS,CAAC;QACrB,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAGK;MAAA;MAAA;MAAA;IAAA,QACL,eAEN,QAAC,QAAQ;MACP,UAAU,EAAEW,kBAAmB;MAC/B,IAAI,EAAEf,SAAU;MAChB,OAAO,EAAES,OAAQ;MACjB,QAAQ,EAAGQ,GAAG,IAAKA,GAAG,CAACM,QAAS;MAChC,QAAQ,EAAE,EAAG;MACb,OAAO,EAAE,CAACvB,SAAS,CAAC0B;IAAO;MAAA;MAAA;MAAA;IAAA,QAC3B;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA7DI3B,SAAS;EAAA,QAIED,WAAW;AAAA;AAAA,KAJtBC,SAAS;AA+Df,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}