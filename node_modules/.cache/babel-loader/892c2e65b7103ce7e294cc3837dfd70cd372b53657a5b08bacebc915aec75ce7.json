{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Desktop\\\\MozokProject\\\\mozokapp\\\\src\\\\components\\\\table.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"quote_id\",\n  headerName: \"ID\",\n  with: 150\n}, {\n  field: \"quote\",\n  headerName: \"Quote\"\n}, {\n  field: \"author\",\n  headerName: \"Author\"\n}];\nconst DataTable = () => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://www.breakingbadapi.com/api/quotes\").then(data => data.json()).then(data => setTableData(data));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: tableData,\n      columns: columns,\n      pageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","DataGrid","columns","field","headerName","with","DataTable","tableData","setTableData","fetch","then","data","json"],"sources":["C:/Users/angel/Desktop/MozokProject/mozokapp/src/components/table.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nconst columns = [\r\n  { field: \"quote_id\", headerName: \"ID\", with: 150 },\r\n  { field: \"quote\", headerName: \"Quote\" },\r\n  { field: \"author\", headerName: \"Author\" },\r\n];\r\n\r\nconst DataTable = () => {\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://www.breakingbadapi.com/api/quotes\")\r\n      .then((data) => data.json())\r\n      .then((data) => setTableData(data));\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <DataGrid rows={tableData} columns={columns} pageSize={10} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,wBAAwB;AAAC;AAElD,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,UAAU;EAAEC,UAAU,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAI,CAAC,EAClD;EAAEF,KAAK,EAAE,OAAO;EAAEC,UAAU,EAAE;AAAQ,CAAC,EACvC;EAAED,KAAK,EAAE,QAAQ;EAAEC,UAAU,EAAE;AAAS,CAAC,CAC1C;AAED,MAAME,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAC3BF,IAAI,CAAEC,IAAI,IAAKH,YAAY,CAACG,IAAI,CAAC,CAAC;EACvC,CAAC,CAAC;EAEF,oBACE;IAAA,uBACE,QAAC,QAAQ;MAAC,IAAI,EAAEJ,SAAU;MAAC,OAAO,EAAEL,OAAQ;MAAC,QAAQ,EAAE;IAAG;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACzD;AAEV,CAAC;AAAC,GAdII,SAAS;AAAA,KAATA,SAAS;AAgBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}